# Installing dython
!pip install dython

# Importing required libraries
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import warnings
warnings.filterwarnings("ignore")

from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.preprocessing import StandardScaler
from sklearn.metrics import accuracy_score, roc_curve, precision_score, recall_score, roc_auc_score
from statsmodels.stats.outliers_influence import variance_inflation_factor
from dython.nominal import associations
from sklearn.metrics import ConfusionMatrixDisplay, confusion_matrix
from sklearn import metrics

# Reading the dataset
df = pd.read_csv(r"C:\Users\Pranav\Downloads\diabetes.csv")

print(df["Outcome"].value_counts(normalize=True))
print(df.shape)
df.info()
df.describe()

# Heatmap of feature correlations
sns.heatmap(df.corr(), annot=True)


X = data.drop("Outcome",axis=1) # Features
y = data["Outcome"] # Target

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)


scaler = StandardScaler()
X_train_scaled = scaler.fit_transform(X_train)
X_test_scaled = scaler.transform(X_test)


model = LogisticRegression()
model.fit(X_train_scaled, y_train)

y_pred = model.predict(X_test_scaled)

cm = confusion_matrix(y_test, y_pred)

disp = ConfusionMatrixDisplay(confusion_matrix=cm, display_labels=model.classes_)
disp.plot(cmap='Greens')
plt.show()
